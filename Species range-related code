# Range-related
getwd()
setwd("/Users/xushuyi/Desktop")

# Read distribution map and get cleaned_ranges shapefile
library(sf)
library(raster)
library(rgeos)
library(maptools)
library(rangemap)
library(lwgeom)
library(reshape)
library(units)
bats<-st_read('/Users/xushuyi/Desktop/Species_range/Species_range.shp',stringsAsFactors=FALSE)
summary(bats)
bats_table<-subset(as.data.frame(bats),select=c(binomial,presence,origin,seasonal))
bats_table<-melt(bats_table)
bats_table$code<-paste(bats_table$variable,bats_table$value,sep='_')
bats_table<-xtabs(~binomial+code,data=bats_table)
write.csv(bats_table,'AF_Bats_Seasonality.csv')

species_selection<-read.csv('/Users/xushuyi/Desktop/Selected.csv',stringsAsFactors = FALSE)
species_selection<-Selected
target_not_found<-setdiff(species_selection$Species,bats$binomial)
extras<-setdiff(bats$binomial,species_selection$Species)
stopifnot(length(target_not_found)==0)
summary(target_not_found)
bats<-subset(bats,origin %in% c(1,2) & binomial %in% species_selection$Species, select=binomial)
saaeac <- '+proj=aea +lat_1=-5 +lat_2=-42 +lat_0=-32 +lon_0=-60 +x_0=0 +y_0=0 +ellps=aust_SA +units=m +no_defs'
bats<-st_transform(bats,saaeac)
check<-st_is_valid(bats,reason=TRUE)
check_main<-sub('\\[[0-9\\. -]+\\]', '', check)
table(check_main)
bats<-st_make_valid(bats)
bats<-split(bats,bats$binomial)
bats<-lapply(bats,st_union)
bats_sfc<-do.call(c,bats)
bats<-st_as_sf(data.frame(binomial=names(bats),geometry=bats_sfc))
st_crs(bats)<-saaeac
st_write(bats,'cleaned_ranges.shp',delete_layer = TRUE)


#Extract Continental Margin
saaeac <- '+proj=aea +lat_1=-5 +lat_2=-42 +lat_0=-32 +lon_0=-60 +x_0=0 +y_0=0 +ellps=aust_SA +units=m +no_defs'
bats<-st_read("Cleaned_ranges/cleaned_ranges.shp")
occupancy<-Forest_cover
occupancy<-st_as_sf(occupancy,coords=c('Lon','Lat'),crs=4326)
occupancy<-st_transform(occupancy,saaeac)
study_species<-names(occupancy)
study_species<-study_species[!study_species %in% c('Site','PID','C1000.pland','C3000.pland','C5000.pland','C500.pland','geometry','Year_finish')]
study_species<-gsub('_',' ',study_species)
found<-match(study_species,unique(bats$binomial))
study_species[is.na(found)]
length(study_species)
length(setdiff(bats$binomial,study_species))
plot(st_geometry(occupancy))
bats_mln<-st_cast(bats, 'MULTILINESTRING', do_split=FALSE)
plot(bats_mln[1,])
bats_mln[1,]

#Read GSHHG shoreline map and crop SA&NA
saaeac <- '+proj=aea +lat_1=-5 +lat_2=-42 +lat_0=-32 +lon_0=-60 +x_0=0 +y_0=0 +ellps=aust_SA +units=m +no_defs'
Coast_shape<-st_read("/Users/xushuyi/Desktop/f/GSHHS_f_L1.shp")
Coast_shape<-st_transform(Coast_shape,saaeac)
Coast_shape[1,]
Coast_shape<-st_make_valid(Coast_shape)
st_is_valid(Coast_shape)
Coast_final<-st_crop(Coast_shape,c(xmin=-2400514,xmax=2910920,ymin=-2529925,ymax=5804703))
st_is_valid(Coast_final)
# aoi<-c(xmin=-125,xmax=-33,ymin=-55,ymax=48) Different CRS
st_write(Coast_final, 'Coast_final.shp', delete_layer=TRUE)

Coast_final<-st_read("/Users/xushuyi/Desktop/Coast_final/Coast_final.shp")

patch_points <- matrix(c(-79.86, 9.06, -79.73, 9.22, -79.53, 9.07, 
                         -79.62, 8.91, -79.86, 9.06), byrow=TRUE, ncol=2)
patch <- st_sfc(st_polygon(list(patch_points)), crs=st_crs(4326))
patch <- st_transform(patch, saaeac)
land <- st_union(st_geometry(Coast_final), patch)
st_is_valid(land)

# To exclude inland waterways
baia<-st_read('baia_de_caxiuana/baia_de_caxiuana.shp')
baia <- st_transform(baia, saaeac)
land_final <- st_difference(st_geometry(land), st_geometry(baia))
plot(st_geometry(baia), border='red')
plot(st_geometry(land_final), add=TRUE, col='grey')
st_is_valid(land_final)
inlets <- st_read('Inlets/Inlets_from_ranges_poly.shp')
inlets <- st_transform(inlets, saaeac)
inlets <- st_union(inlets)
land_final <- st_difference(st_geometry(land_final), st_geometry(inlets))
st_is_valid(land_final)
st_write(land_final, 'new_world_continental_coastline.shp', delete_layer=TRUE)

land_final<-st_read("/Users/xushuyi/Desktop/new_world_continental_coastline_buffered/new_world_continental_coastline.shp")

land_buff<-st_read("/Users/xushuyi/Desktop/new_world_continental_coastline_buffered/new_world_continental_coastline_buffered.shp")
land_final<-st_transform(land_final,saaeac)
bats_mln<-st_transform(bats_mln,saaeac)
continental_margin<-st_intersection(bats_mln,st_geometry(land_final))
missing <- setdiff(bats_mln$binomial, continental_margin$binomial)
data.frame(missing, missing %in% study_species)
st_write(continental_margin, 'Bats_continental_range_margins_without_buffer.shp', delete_layer=TRUE)
distance=drop_units(st_distance(continental_margin,occupancy))
occupancy=occupancy %>% select(order(colnames(occupancy)))
distances=drop_units(st_distance(continental_margin,occupancy))
in_Range = drop_units(st_distance(occupancy, bats_mln)) # Check if species is in the range
final_Distances = distance * ((in_Range == 0)* 2 - 1)


# To buffer coastline and get continental margins
land_buff<-st_buffer(land_final,-13000)
land_buff<-st_transform(land_buff,saaeac)
st_write(land_buff, 'new_world_continental_coastline_buffered.shp', delete_layer=TRUE)
all(st_is_valid(bats_mln))
land_buff<-st_transform(land_buff,saaeac)
continental_margin <- st_intersection(bats_mln, st_geometry(land_buff))
missing <- setdiff(bats_mln$binomial, continental_margin$binomial)
data.frame(missing, missing %in% study_species)
st_write(continental_margin, 'Bats_continental_range_margins_cleaned_sites.shp', delete_layer=TRUE)
continental_margin<-st_transform(continental_margin,saaeac)

## Calculate distance for each species from each site to their range edge
## NOTE the order that the species occur in the columns must match the order the continental margins are given in

distances = drop_units(st_distance(bats_mln,occupancy ))
# Species distance to its range edge
# Distance_to_range_edge file
distances2=drop_units(st_distance(continental_margin,occupancy))

site_Occupancy = site_Occupancy %>% select(order(colnames(site_Occupancy)))

distances = drop_units(st_distance(site_Occupancy, continental_Margin))

ggplot() + geom_sf(data = species_Borders) + geom_sf(data = site_Occupancy)

## Calculate distance for each species to it's range - note if it is in it's range it will get a value of 0 which we will use to
## check if a species distance should be +(in range), or -(out of range)
## NOTE the order that the species occur in the columns must match the order the continental margins are given in

in_Range = drop_units(st_distance(site_Occupancy, species_Ranges)) # Check if species is in the range
final_Distances = distances * ((in_Range == 0)* 2 - 1)

# Plot of sites and the borders they were measured to
ggplot() + geom_sf(data = continental_Margin, aes(col = Species)) + geom_sf(data = site_Occupancy)

## Plot of sites compared to the range of species, and the "continent"
ggplot() + geom_sf(data = continent_Buff, aes(fill = "Continent")) + geom_sf(data = species_Ranges, aes(fill = Species)) + geom_sf(data = site_Occupancy)


# Draw occurrence&range map for certain species
# Gardnerycteris crenulatum
bats_Gc<-subset(bats_mln,bats_mln$binomial=='Gardnerycteris crenulatum')
Occupancy_specific<-st_as_sf(Occupancy_specific,coords=c('Longitude','Latitude'),crs=4326)
Occupancy_specific<-st_transform(Occupancy_specific,saaeac)
Occupancy_specific<-na.omit(Occupancy_specific)
ggplot() + geom_sf(data = bats_Gc) + geom_sf(data = Occupancy_specific$geometry)+ggtitle("Gardnerycteris crenulatum")

#Draw a map showing the study sites
library(ggplot2)
library(ggmap)
install.packages('ggmap')
Longitude<-c(-35.184929,-39.14066915,-39.13484356,-39.13655399,-39.13814807,-39.12165142,-39.123586,-39.09645198,-39.09930412,-39.12724062,-39.10814594,-39.14126424,-39.14471109,-39.13988103,-39.14719301,-39.13733821,-39.13895959,-39.18118194,-39.17704218,-39.16881234,-39.15895861,-39.06727633,-39.06400296,-39.05716609,-39.04151419,-39.07498893,-39.0713181,-39.03492316,-39.03183834,-39.06328151,-39.0390459,-47.44151671,-47.51944025,-47.72969585,-47.86367361,-47.83276325,-47.34048143,-47.64741523,-47.6138473,-47.69120129,-48.11417609,-47.80057311,-47.41418391,-48.12505287,-48.2127114,-47.873203,-35.202361,-47.879569,-47.867592,-47.603525,-47.616951,-47.591215,-47.595892,-47.584854,-47.597692,-47.521386,-43.284154,-47.846089,-47.867543,-47.884081,-43.60111,-43.972326,-44.043184,-43.146806,-44.549066,-43.916367,-42.48888,-43.158532,-47.929743,-48.416097,-42.63106,-44.863633,-41.584559,-43.607346,-42.261971,-42.036271,-42.570575,-51.712222,-51.696111,-39.566139,-49.25528,-49.25528,-49.25528,-42.75556,-35.09222,-47.417783,-47.505275,-47.205003,-47.478085,-47.544482,-46.620013,-48.08,-48.13,-42.86,-35.1,-53.28,-51.33,-51.59,-51.11,-34.95)
Latitude<-c(-6.086251,-15.00684321,-15.01621918,-14.99654532,-14.998398,-14.99303894,-14.99238368,-14.96949817,-14.971078,-14.98634266,-14.96171962,-15.13805267,-15.13906029,-15.14257913,-15.1456632,-15.11365171,-15.11490554,-15.13273337,-15.13999139,-15.13129059,-15.1494061,-15.18399197,-15.15792777,-15.16476232,-15.17231778,-15.15063401,-15.15357229,-15.17888157,-15.17434284,-15.17302372,-15.17706462,-22.05033143,-20.73535918,-21.55564617,-22.17089932,-21.52652292,-21.27941729,-22.14771356,-21.64308912,-22.24207107,-22.30362961,-21.60909899,-21.84274815,-22.26698888,-22.25912489,-21.95798247,-5.838102,-21.984087,-21.971324,-21.739419,-21.717757,-21.729754,-21.720625,-21.726323,-21.720218,-22.406729,-22.972713,-21.963656,-21.971895,-21.97105,-19.300894,-19.876469,-19.904935,-22.383828,-23.018111,-19.893398,-22.328934,-22.95225,-25.095838,-24.272366,-19.764141,-23.356475,-22.230148,-19.353555,-22.583818,-22.421653,-22.73306,-26.582222,-26.588889,-15.391917,-28.48361,-28.48361,-28.48361,-22.43139,-8.11861,-22.820551,-22.569174,-22.671121,-22.358928,-22.396379,-23.420009,-25.17,-25.13,-20.8,-6.8,-22.75,-25.06,-25.91,-30.19,-7.91)
df<-as.data.frame(cbind(Longitude,Latitude))
register_google(key='AIzaSyAvOu7jyzzLbYJ64rjpPuUL7jYNVwNAAI4')
mapgilbert<-get_map(location=c(lon=mean(df$Longitude),lat=mean(df$Latitude)),zoom=4,maptype='satellite',scale=2)
ggmap(mapgilbert) +
  geom_point(data = df, aes(x = Longitude, y = Latitude, fill = "red", alpha = 0.5), size = 3, shape = 21) +
  guides(fill='none', alpha='none', size='none')





